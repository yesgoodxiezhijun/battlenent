{"remainingRequest":"d:\\html\\项目\\battlenent\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!d:\\html\\项目\\battlenent\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!d:\\html\\项目\\battlenent\\vue_app_00\\src\\components\\sub\\abc.vue?vue&type=script&lang=js","dependencies":[{"path":"d:\\html\\项目\\battlenent\\vue_app_00\\src\\components\\sub\\abc.vue","mtime":1553132938000},{"path":"d:\\html\\项目\\battlenent\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"d:\\html\\项目\\battlenent\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"d:\\html\\项目\\battlenent\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import _defineProperty from \"d:\\\\html\\\\\\u9879\\u76EE\\\\battlenent\\\\vue_app_00\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/defineProperty\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'slide',\n  data: function data() {\n    var _ref;\n\n    return _ref = {\n      list: [\"nav1.png\", \"nav2.png\", \"nav3.png\", \"nav4.png\", \"nav5.png\", \"nav6.png\", \"nav7.png\"],\n      startX: 0,\n      //开始触摸的位置\n      lastX: 0,\n      //滑动时的位置\n      endX: 0,\n      //结束触摸的位置\n      disX: 0\n    }, _defineProperty(_ref, \"lastX\", 0), _defineProperty(_ref, \"lastY\", 0), _defineProperty(_ref, \"translateX\", 'translateX(0px)'), _ref;\n  },\n  methods: {\n    touchStart: function touchStart(ev) {\n      ev = ev || event; // console.log(ev.targetTouches);\n      // console.log(ev.changedTouches);\n\n      if (ev.touches.length == 1) {\n        //tounches类数组，等于1时表示此时有只有一只手指在触摸屏幕\n        this.startX = this.lastX = ev.touches[0].clientX; // 记录开始位置\n\n        this.lastY = ev.touches[0].clientX;\n      }\n    },\n    touchMove: function touchMove(ev) {\n      ev = ev || event;\n      var slideWidth = this.$refs.slide.offsetWidth; //$refs 减少获取dom节点的消耗\n      // console.log(ev.targetTouches);\n      // console.log(ev.changedTouches);\n\n      if (ev.touches.length == 1) {\n        // 实时的滑动的距离-起始位置=实时移动的位置\n        this.disX = this.lastX - this.startX; // 计算两次移动距离Y>X就不启动滑动动画,防止误滑\n\n        var disX = ev.touches[0].clientX - this.lastX;\n        var disY = ev.touches[0].clientY - this.lastY; // console.log(disX, disY);\n\n        if (Math.abs(disX) > Math.abs(disY)) {\n          this.translateX = 'translateX(' + this.disX + 'px)';\n        } // 记录一次坐标值\n\n\n        this.lastX = ev.touches[0].clientX;\n        this.lastY = ev.touches[0].clientY;\n      }\n    },\n    touchEnd: function touchEnd(ev) {\n      ev = ev || event;\n      var slideWidth = this.$refs.slide.offsetWidth;\n      var length = -167;\n\n      if (ev.changedTouches.length == 1) {\n        var endX = ev.changedTouches[0].clientX;\n        this.disX = endX - this.startX;\n        console.log(this.disX); // console.log(this.disX, 'this.disX')\n        // console.log((slideWidth / 2), 'slideWidth/2');\n\n        this.translateX = 'translateX(0px)'; // 只有滑动大于一半距离才触发\n\n        if (Math.abs(this.disX) > slideWidth / 20) {\n          if (this.disX < 0) {\n            console.log('左滑');\n            this.$emit('change', 'left');\n            this.translateX = 'translateX(' + length + 'px)';\n          } else {\n            console.log('右滑');\n            this.$emit('change', 'right');\n            this.translateX = 'translateX(0px)';\n          }\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["abc.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA,eAAA;AACA,QAAA,OADA;AAEA,MAFA,kBAEA;AAAA;;AACA;AACA,YAAA,CACA,UADA,EAEA,UAFA,EAGA,UAHA,EAIA,UAJA,EAKA,UALA,EAMA,UANA,EAOA,UAPA,CADA;AAUA,cAAA,CAVA;AAUA;AACA,aAAA,CAXA;AAWA;AACA,YAAA,CAZA;AAYA;AACA,YAAA;AAbA,sCAcA,CAdA,kCAeA,CAfA,uCAgBA,iBAhBA;AAkBA,GArBA;AAsBA,WAAA;AACA,gBAAA,oBAAA,EAAA,EAAA;AACA,WAAA,MAAA,KAAA,CADA,CAEA;AACA;;AACA,UAAA,GAAA,OAAA,CAAA,MAAA,IAAA,CAAA,EAAA;AAAA;AACA,aAAA,MAAA,GAAA,KAAA,KAAA,GAAA,GAAA,OAAA,CAAA,CAAA,EAAA,OAAA,CADA,CACA;;AACA,aAAA,KAAA,GAAA,GAAA,OAAA,CAAA,CAAA,EAAA,OAAA;AACA;AACA,KATA;AAUA,eAAA,mBAAA,EAAA,EAAA;AACA,WAAA,MAAA,KAAA;AACA,UAAA,aAAA,KAAA,KAAA,CAAA,KAAA,CAAA,WAAA,CAFA,CAEA;AACA;AACA;;AACA,UAAA,GAAA,OAAA,CAAA,MAAA,IAAA,CAAA,EAAA;AACA;AACA,aAAA,IAAA,GAAA,KAAA,KAAA,GAAA,KAAA,MAAA,CAFA,CAGA;;AACA,YAAA,OAAA,GAAA,OAAA,CAAA,CAAA,EAAA,OAAA,GAAA,KAAA,KAAA;AACA,YAAA,OAAA,GAAA,OAAA,CAAA,CAAA,EAAA,OAAA,GAAA,KAAA,KAAA,CALA,CAMA;;AACA,YAAA,KAAA,GAAA,CAAA,IAAA,IAAA,KAAA,GAAA,CAAA,IAAA,CAAA,EAAA;AACA,eAAA,UAAA,GAAA,gBAAA,KAAA,IAAA,GAAA,KAAA;AACA,SATA,CAUA;;;AACA,aAAA,KAAA,GAAA,GAAA,OAAA,CAAA,CAAA,EAAA,OAAA;AACA,aAAA,KAAA,GAAA,GAAA,OAAA,CAAA,CAAA,EAAA,OAAA;AACA;AACA,KA7BA;AA8BA,cAAA,kBAAA,EAAA,EAAA;AACA,WAAA,MAAA,KAAA;AAEA,UAAA,aAAA,KAAA,KAAA,CAAA,KAAA,CAAA,WAAA;AACA,UAAA,SAAA,CAAA,GAAA;;AACA,UAAA,GAAA,cAAA,CAAA,MAAA,IAAA,CAAA,EAAA;AACA,YAAA,OAAA,GAAA,cAAA,CAAA,CAAA,EAAA,OAAA;AACA,aAAA,IAAA,GAAA,OAAA,KAAA,MAAA;AACA,gBAAA,GAAA,CAAA,KAAA,IAAA,EAHA,CAIA;AACA;;AACA,aAAA,UAAA,GAAA,iBAAA,CANA,CAOA;;AAEA,YAAA,KAAA,GAAA,CAAA,KAAA,IAAA,IAAA,aAAA,EAAA,EAAA;AACA,cAAA,KAAA,IAAA,GAAA,CAAA,EAAA;AACA,oBAAA,GAAA,CAAA,IAAA;AACA,iBAAA,KAAA,CAAA,QAAA,EAAA,MAAA;AACA,iBAAA,UAAA,GAAA,gBAAA,MAAA,GAAA,KAAA;AACA,WAJA,MAIA;AACA,oBAAA,GAAA,CAAA,IAAA;AACA,iBAAA,KAAA,CAAA,QAAA,EAAA,OAAA;AACA,iBAAA,UAAA,GAAA,iBAAA;AACA;AACA;AAEA;AACA;AAzDA;AAtBA,CAAA","sourcesContent":["<template>\r\n    <div class=\"app-abc\" ref='slide' @touchstart='touchStart'\r\n       @touchmove='touchMove' @touchend='touchEnd' \r\n       :style=\"{transform: translateX}\">\r\n        <slot v-for=\"item of list\">\r\n               <div>   \r\n                 <img :src=\"'http://127.0.0.1:3000/image/'+item\" alt=\"\">  \r\n               </div> \r\n         </slot>\r\n      </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'slide',\r\n    data() {\r\n      return {\r\n        list:[\r\n           \"nav1.png\", \r\n           \"nav2.png\", \r\n           \"nav3.png\", \r\n           \"nav4.png\", \r\n           \"nav5.png\", \r\n           \"nav6.png\", \r\n           \"nav7.png\"\r\n        ],\r\n        startX: 0, //开始触摸的位置\r\n        lastX: 0, //滑动时的位置\r\n        endX: 0, //结束触摸的位置\r\n        disX: 0, //移动距离\r\n        lastX: 0, //上一次X坐标\r\n        lastY: 0, //上一次Y坐标\r\n        translateX: 'translateX(0px)'\r\n      }\r\n    },\r\n    methods: {\r\n      touchStart: function (ev) {\r\n        ev = ev || event;\r\n        // console.log(ev.targetTouches);\r\n        // console.log(ev.changedTouches);\r\n        if (ev.touches.length == 1) { //tounches类数组，等于1时表示此时有只有一只手指在触摸屏幕\r\n          this.startX = this.lastX = ev.touches[0].clientX; // 记录开始位置\r\n          this.lastY = ev.touches[0].clientX;\r\n        }\r\n      },\r\n      touchMove: function (ev) {\r\n        ev = ev || event;\r\n        let slideWidth = this.$refs.slide.offsetWidth; //$refs 减少获取dom节点的消耗\r\n        // console.log(ev.targetTouches);\r\n        // console.log(ev.changedTouches);\r\n        if (ev.touches.length == 1) {\r\n          // 实时的滑动的距离-起始位置=实时移动的位置\r\n          this.disX = this.lastX - this.startX;\r\n          // 计算两次移动距离Y>X就不启动滑动动画,防止误滑\r\n          var disX = ev.touches[0].clientX - this.lastX\r\n          var disY = ev.touches[0].clientY - this.lastY\r\n          // console.log(disX, disY);\r\n          if (Math.abs(disX) > Math.abs(disY)) {\r\n            this.translateX = 'translateX(' + this.disX+ 'px)';\r\n          }\r\n          // 记录一次坐标值\r\n          this.lastX = ev.touches[0].clientX;\r\n          this.lastY = ev.touches[0].clientY;\r\n        }\r\n      },\r\n      touchEnd: function (ev) {\r\n         ev = ev || event;\r\n       \r\n        let slideWidth = this.$refs.slide.offsetWidth;\r\n        var length=-167;\r\n        if (ev.changedTouches.length == 1) {\r\n          let endX = ev.changedTouches[0].clientX;\r\n          this.disX = endX - this.startX;\r\n          console.log(this.disX);\r\n          // console.log(this.disX, 'this.disX')\r\n          // console.log((slideWidth / 2), 'slideWidth/2');\r\n          this.translateX = 'translateX(0px)';\r\n          // 只有滑动大于一半距离才触发\r\n        \r\n               if (Math.abs(this.disX) > (slideWidth / 20)) {\r\n                    if (this.disX < 0) {\r\n                      console.log('左滑');\r\n                      this.$emit('change', 'left')\r\n                      this.translateX = 'translateX(' + length+ 'px)';\r\n                    } else {\r\n                      console.log('右滑');\r\n                      this.$emit('change', 'right')\r\n                      this.translateX = 'translateX(0px)';\r\n                    }\r\n              }\r\n            \r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style>\r\n  .app-abc{\r\n      padding-top:2px;\r\n      width:5000px;\r\n      transition:2s;\r\n      background-color:#012a60;\r\n  }\r\n  .app-abc::after{\r\n    content:\"\";\r\n    display:table;\r\n    clear: both;\r\n  }\r\n  .app-abc div{\r\n     padding:4px 0;\r\n      float: left;\r\n      width:80px;\r\n      height:40px;\r\n      border:1px solid #264770;\r\n      background-color:#012a60;\r\n      display:flex;\r\n      justify-content: space-between;\r\n      margin:0 1px;\r\n  } \r\n  .app-abc div img{\r\n    display:block;\r\n      margin:0 auto;\r\n      float: left;\r\n      height:100%;\r\n  } \r\n</style>"],"sourceRoot":"src\\components\\sub"}]}