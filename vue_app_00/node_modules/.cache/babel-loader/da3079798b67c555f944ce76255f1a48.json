{"remainingRequest":"D:\\html\\4月脚本\\vue.ui\\2019-1-28\\src\\vue_app_00\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!D:\\html\\4月脚本\\vue.ui\\2019-1-28\\src\\vue_app_00\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\html\\4月脚本\\vue.ui\\2019-1-28\\src\\vue_app_00\\vue_app_00\\src\\components\\home\\ShopCart.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\html\\4月脚本\\vue.ui\\2019-1-28\\src\\vue_app_00\\vue_app_00\\src\\components\\home\\ShopCart.vue","mtime":1551144598075},{"path":"D:\\html\\4月脚本\\vue.ui\\2019-1-28\\src\\vue_app_00\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"D:\\html\\4月脚本\\vue.ui\\2019-1-28\\src\\vue_app_00\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"D:\\html\\4月脚本\\vue.ui\\2019-1-28\\src\\vue_app_00\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Toast } from \"mint-ui\";\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      cb: false,\n      allcb: false\n    };\n  },\n  methods: {\n    delItem: function delItem(e) {\n      var _this = this;\n\n      //e事件对象e.target触发按钮的对象\n      //target.dataset 自定义属性集合\n      //按钮中的id\n      var id = e.target.dataset.id;\n      var idx = e.target.dataset.idx; //  console.log(idx);\n\n      var url = \"http://127.0.0.1:3000/\";\n      url += \"delCartItem?id=\" + id;\n      this.axios.get(url).then(function (result) {\n        if (result.data.code == 1) {\n          Toast(\"删除成功\");\n\n          _this.list.splice(idx, 1);\n        }\n      });\n    },\n    loadMore: function loadMore() {\n      var _this2 = this;\n\n      var url = \"http://127.0.0.1:3000/\";\n      url += \"cartlist?uid=1\";\n      this.axios.get(url).then(function (result) {\n        //1:判断如果没有登录显示出错消息\n        if (result.data.code == -1) {\n          Toast(\"请登录\");\n          return;\n        } //1:2 没有与 vue data双向绑定 \n        //1:接收服务器程序返回数据\n        //ShopCart.vue \n\n\n        var rows = result.data.data; //修改全局购物的数量\n\n        _this2.$store.commit(\"updateCount\", rows.length); //1.接收服务器程序返回数据\n\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n            item.cb = false; //2.为每个商品对象添加属性cb选中状态\n\n            _this2.list = rows; //3.将最终数据复制list列表\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      });\n    },\n    selectAll: function selectAll(e) {\n      //1获取当前全选复选框状态\n      var cb = e.target.checked; //2修改啊全选状态\n\n      console.log(this.allcb);\n      this.allcb = cb;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var tiem = _step2.value;\n          tiem.cb = cb;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    },\n    modifyItem: function modifyItem(e) {\n      //修改\n      //1.获取当前元素下标【其中一种方式】\n      var idx = e.target.dataset.i; // console.log(idx);\n      //2.将下标对象属猪中元素cb修改当前复选状态\n\n      var checked = e.target.checked; //3.将数组中对应cb状态修改\n\n      this.list[idx].cb = checked; //4:统计购物车中商品选中数量==list.length\n      //5:将全选状态：turn\n\n      var count = 0;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n\n          //  console.log(item.cb);\n          if (item.cb) {\n            count++;\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      if (count == this.list.length) {\n        this.allcb = true;\n      } else {\n        this.allcb = false;\n      }\n    },\n    temoveItem: function temoveItem() {\n      //0:创建一个空的字符串，为了后续拼接字符串\n      var html = \"\"; //1:遍历数组中元素\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.list[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var item = _step4.value;\n\n          //2:判断cb==true\n          if (item.cb) {\n            html += item.id + \",\"; //3:保存id:品字符串\n            //4:发送ajax请求 删除多个商品\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      html = html.substring(0, html.length - 1);\n      console.log(html);\n      var url = \"http://127.0.0.1:3000/\";\n      url += \"removeMItem?ids=\" + html;\n      console.log(url);\n      this.axios.get(url).then(function (result) {\n        if (result.data.code == 1) {\n          Toast(\"删除成功\");\n        }\n      });\n    }\n  },\n  created: function created() {\n    this.loadMore();\n  }\n};",{"version":3,"sources":["ShopCart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"app-cart\">\r\n        <div class=\"mui-card\">\r\n\t\t\t\t<div class=\"mui-card-header\">\r\n                <h3>购物车的列表</h3> \r\n                 <h4>全选   <input type=\"checkbox\" @click=\"selectAll\" :checked=\"allcb\"/></h4>\r\n                </div>\r\n\t\t\t\t<div class=\"mui-card-content\">\r\n\t\t\t\t\t<div class=\"mui-card-content-inner\">\r\n                    <ul class=\"mui-table-view\">\r\n\t\t\t\t<li class=\"mui-table-view-cell mui-media\" v-for=\"(item,i) in list\" :key=\"item.id\">\r\n\t\t\t\t\t<a href=\"javascript:;\">\r\n\t\t\t\t\t\t<img class=\"mui-media-object mui-pull-left\" src=\"\">\r\n\t\t\t\t\t\t<div class=\"mui-media-body\">\r\n\t\t\t\t\t\t\t<input type=\"checkbox\" :checked=\"item.cb\" :data-i=\"i\" @click=\"modifyItem\" />\r\n                            {{item.lname}}\r\n                           ￥{{item.price}}\r\n                            <!--delItem处理删除商品函数-->\r\n                            <!--data-id=\"item.id\"当前商品的id-->\r\n                            <!--data-idx='i'当前商品的下标-->\r\n                            <button @click=\"delItem\" :data-id=\"item.id\" :data-idx=\"i\">删除</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\r\n\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"mui-card-footer\">\r\n                <button @click=\"temoveItem\">删除商品</button>\r\n                小计:￥3.00\r\n                </div>\r\n\t\t\t</div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import {Toast} from \"mint-ui\"\r\n    export default{\r\n        data(){\r\n            return {\r\n                list:[],\r\n                cb:false,\r\n                allcb:false  \r\n            };\r\n        },\r\n        methods:{\r\n            delItem(e){\r\n                //e事件对象e.target触发按钮的对象\r\n                //target.dataset 自定义属性集合\r\n                //按钮中的id\r\n                 var id=e.target.dataset.id;  \r\n                 var idx=e.target.dataset.idx;  \r\n               //  console.log(idx);\r\n                 var url=\"http://127.0.0.1:3000/\";\r\n                 url+=\"delCartItem?id=\"+id;\r\n                 this.axios.get(url).then(result=>{\r\n                       if(result.data.code==1){\r\n                           Toast(\"删除成功\");\r\n                        this.list.splice(idx,1);\r\n                       }\r\n                 })\r\n            },\r\n            loadMore(){\r\n                 var url=\"http://127.0.0.1:3000/\";\r\n                 url+=\"cartlist?uid=1\";\r\n                 this.axios.get(url).then(result=>{\r\n                    //1:判断如果没有登录显示出错消息\r\n          if(result.data.code == -1){\r\n             Toast(\"请登录\");\r\n             return;\r\n          }\r\n          //1:2 没有与 vue data双向绑定 \r\n          //1:接收服务器程序返回数据\r\n          //ShopCart.vue \r\n                     var rows=result.data.data;\r\n                     //修改全局购物的数量\r\n                     this.$store.commit(\"updateCount\",rows.length);\r\n                    //1.接收服务器程序返回数据\r\n                    for(var item of rows){\r\n                        item.cb=false;\r\n                    //2.为每个商品对象添加属性cb选中状态\r\n                        this.list=rows;\r\n                    //3.将最终数据复制list列表\r\n                    }\r\n                    \r\n                 })\r\n            },\r\n            selectAll(e){\r\n                 //1获取当前全选复选框状态\r\n\r\n                 var cb=e.target.checked;\r\n                 //2修改啊全选状态\r\n                 console.log(this.allcb);\r\n                 this.allcb=cb;\r\n                 for(var tiem of this.list)\r\n                 tiem.cb=cb;\r\n            },\r\n            modifyItem(e){\r\n                //修改\r\n                //1.获取当前元素下标【其中一种方式】\r\n                var idx=e.target.dataset.i;\r\n               // console.log(idx);\r\n                //2.将下标对象属猪中元素cb修改当前复选状态\r\n                var checked=e.target.checked; \r\n                //3.将数组中对应cb状态修改\r\n               this.list[idx].cb=checked;\r\n                //4:统计购物车中商品选中数量==list.length\r\n                //5:将全选状态：turn\r\n             var count=0;\r\n             for(var item of this.list){\r\n               //  console.log(item.cb);\r\n                 if(item.cb){count++;}\r\n             }\r\n             if(count==this.list.length){\r\n                 this.allcb=true;\r\n             }else{\r\n                 this.allcb=false;\r\n             }\r\n               \r\n            },\r\n            temoveItem(){\r\n                //0:创建一个空的字符串，为了后续拼接字符串\r\n                var html=\"\";\r\n                //1:遍历数组中元素\r\n                for(var item of this.list){\r\n                //2:判断cb==true\r\n                    if(item.cb){\r\n                    html+=item.id+\",\";  \r\n                //3:保存id:品字符串\r\n                //4:发送ajax请求 删除多个商品\r\n                     }\r\n                 }\r\n                 html=html.substring(0,html.length-1);\r\n                    console.log(html);\r\n                 var url=\"http://127.0.0.1:3000/\";\r\n                     url+=\"removeMItem?ids=\"+html;\r\n                    console.log(url);        \r\n                this.axios.get(url).then(result=>{\r\n                      if(result.data.code==1){\r\n                          Toast(\"删除成功\");    \r\n                      }               \r\n                 }) \r\n            }\r\n           \r\n        },\r\n        created(){\r\n            this.loadMore();\r\n        }\r\n    }\r\n</script>\r\n<style >\r\n    \r\n</style>"],"sourceRoot":"src\\components\\home"}]}