{"remainingRequest":"d:\\html\\项目\\battlenent\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!d:\\html\\项目\\battlenent\\vue_app_00\\src\\components\\sub\\abc.vue?vue&type=style&index=0&lang=css","dependencies":[{"path":"d:\\html\\项目\\battlenent\\vue_app_00\\src\\components\\sub\\abc.vue","mtime":1553132938000},{"path":"d:\\html\\项目\\battlenent\\vue_app_00\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"d:\\html\\项目\\battlenent\\vue_app_00\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1521907988000},{"path":"d:\\html\\项目\\battlenent\\vue_app_00\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"d:\\html\\项目\\battlenent\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"d:\\html\\项目\\battlenent\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.app-abc{\n    padding-top:2px;\n    width:5000px;\n    transition:2s;\n    background-color:#012a60;\n}\n.app-abc::after{\n  content:\"\";\n  display:table;\n  clear: both;\n}\n.app-abc div{\n   padding:4px 0;\n    float: left;\n    width:80px;\n    height:40px;\n    border:1px solid #264770;\n    background-color:#012a60;\n    display:flex;\n    justify-content: space-between;\n    margin:0 1px;\n} \n.app-abc div img{\n  display:block;\n    margin:0 auto;\n    float: left;\n    height:100%;\n} \n",{"version":3,"sources":["abc.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"abc.vue","sourceRoot":"src\\components\\sub","sourcesContent":["<template>\r\n    <div class=\"app-abc\" ref='slide' @touchstart='touchStart'\r\n       @touchmove='touchMove' @touchend='touchEnd' \r\n       :style=\"{transform: translateX}\">\r\n        <slot v-for=\"item of list\">\r\n               <div>   \r\n                 <img :src=\"'http://127.0.0.1:3000/image/'+item\" alt=\"\">  \r\n               </div> \r\n         </slot>\r\n      </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'slide',\r\n    data() {\r\n      return {\r\n        list:[\r\n           \"nav1.png\", \r\n           \"nav2.png\", \r\n           \"nav3.png\", \r\n           \"nav4.png\", \r\n           \"nav5.png\", \r\n           \"nav6.png\", \r\n           \"nav7.png\"\r\n        ],\r\n        startX: 0, //开始触摸的位置\r\n        lastX: 0, //滑动时的位置\r\n        endX: 0, //结束触摸的位置\r\n        disX: 0, //移动距离\r\n        lastX: 0, //上一次X坐标\r\n        lastY: 0, //上一次Y坐标\r\n        translateX: 'translateX(0px)'\r\n      }\r\n    },\r\n    methods: {\r\n      touchStart: function (ev) {\r\n        ev = ev || event;\r\n        // console.log(ev.targetTouches);\r\n        // console.log(ev.changedTouches);\r\n        if (ev.touches.length == 1) { //tounches类数组，等于1时表示此时有只有一只手指在触摸屏幕\r\n          this.startX = this.lastX = ev.touches[0].clientX; // 记录开始位置\r\n          this.lastY = ev.touches[0].clientX;\r\n        }\r\n      },\r\n      touchMove: function (ev) {\r\n        ev = ev || event;\r\n        let slideWidth = this.$refs.slide.offsetWidth; //$refs 减少获取dom节点的消耗\r\n        // console.log(ev.targetTouches);\r\n        // console.log(ev.changedTouches);\r\n        if (ev.touches.length == 1) {\r\n          // 实时的滑动的距离-起始位置=实时移动的位置\r\n          this.disX = this.lastX - this.startX;\r\n          // 计算两次移动距离Y>X就不启动滑动动画,防止误滑\r\n          var disX = ev.touches[0].clientX - this.lastX\r\n          var disY = ev.touches[0].clientY - this.lastY\r\n          // console.log(disX, disY);\r\n          if (Math.abs(disX) > Math.abs(disY)) {\r\n            this.translateX = 'translateX(' + this.disX+ 'px)';\r\n          }\r\n          // 记录一次坐标值\r\n          this.lastX = ev.touches[0].clientX;\r\n          this.lastY = ev.touches[0].clientY;\r\n        }\r\n      },\r\n      touchEnd: function (ev) {\r\n         ev = ev || event;\r\n       \r\n        let slideWidth = this.$refs.slide.offsetWidth;\r\n        var length=-167;\r\n        if (ev.changedTouches.length == 1) {\r\n          let endX = ev.changedTouches[0].clientX;\r\n          this.disX = endX - this.startX;\r\n          console.log(this.disX);\r\n          // console.log(this.disX, 'this.disX')\r\n          // console.log((slideWidth / 2), 'slideWidth/2');\r\n          this.translateX = 'translateX(0px)';\r\n          // 只有滑动大于一半距离才触发\r\n        \r\n               if (Math.abs(this.disX) > (slideWidth / 20)) {\r\n                    if (this.disX < 0) {\r\n                      console.log('左滑');\r\n                      this.$emit('change', 'left')\r\n                      this.translateX = 'translateX(' + length+ 'px)';\r\n                    } else {\r\n                      console.log('右滑');\r\n                      this.$emit('change', 'right')\r\n                      this.translateX = 'translateX(0px)';\r\n                    }\r\n              }\r\n            \r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style>\r\n  .app-abc{\r\n      padding-top:2px;\r\n      width:5000px;\r\n      transition:2s;\r\n      background-color:#012a60;\r\n  }\r\n  .app-abc::after{\r\n    content:\"\";\r\n    display:table;\r\n    clear: both;\r\n  }\r\n  .app-abc div{\r\n     padding:4px 0;\r\n      float: left;\r\n      width:80px;\r\n      height:40px;\r\n      border:1px solid #264770;\r\n      background-color:#012a60;\r\n      display:flex;\r\n      justify-content: space-between;\r\n      margin:0 1px;\r\n  } \r\n  .app-abc div img{\r\n    display:block;\r\n      margin:0 auto;\r\n      float: left;\r\n      height:100%;\r\n  } \r\n</style>"]}]}